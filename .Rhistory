libpath<-"/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6"
#libpath<-snakemake@input[[2]]
.libPaths(c(libpath, .libPaths()))
suppressMessages(suppressWarnings(library(dplyr,warn.conflicts = F, quietly = T)))
#krakendatapath<-snakemake@input[[3]]
krakendatapath<-"data/kraken2_classification/reads_90/reads_90.report"
report<-read.csv2(paste("./", krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
setwd(getSrcDirectory()[1])
getSrcDirectory()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
libpath<-"/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6"
#libpath<-snakemake@input[[2]]
.libPaths(c(libpath, .libPaths()))
suppressMessages(suppressWarnings(library(dplyr,warn.conflicts = F, quietly = T)))
#krakendatapath<-snakemake@input[[3]]
krakendatapath<-"data/kraken2_classification/reads_90/reads_90.report"
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
getwd()
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd("/user_data/men/sepseq/clinical_studies/init_tests/kraken2_filter/")
#krakendatapath<-snakemake@input[[3]]
krakendatapath<-"data/kraken2_classification/reads_90/reads_90.report"
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
View(report)
colnames(report)<-c("percentage", "cladeReads", "taxonReads", "n_kmers", "n_unique_kmers",
"taxRank", "taxID", "name")
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_list<-list.files(sam_folder, pattern = ".sam")
basename(sam_list[1])
file_path_sans_ext(sam_list[1])
tools::file_path_sans_ext(sam_list[1])
read_sam <- function(file) {
sam_read<-read_tsv(file = file,
col_names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics")) %>%
select(barcode, flag, start_position, mapq, cigar, align_metrics) %>%
filter(flag != 4) %>%
separate(align_metrics, into = c(NA, NA, "align_score", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), sep = ":") %>%
separate(align_score, into = c("align_score", NA)) %>%
mutate(taxid = tools::file_path_sans_ext(file))%>%
# differentiate for adapters and barcodes!
return(sam_read)
}
read_sam <- function(file) {
sam_read<-read_tsv(file = file,
col_names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics")) %>%
select(barcode, flag, start_position, mapq, cigar, align_metrics) %>%
filter(flag != 4) %>%
separate(align_metrics, into = c(NA, NA, "align_score", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), sep = ":") %>%
separate(align_score, into = c("align_score", NA)) %>%
mutate(taxid = tools::file_path_sans_ext(file))%>%
# differentiate for adapters and barcodes!
return(sam_read)
}
combine_sam_files<-function(file_list){
combined_sam<-data.frame()
for (i in file_list) {
sam_batch<-read_sam(i)
combined_sam<-combined_sam %>%
bind_rows(
sam_batch
)
}
return(combined_sam)
}
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_files<-combine_sam_files(sam_list)
suppressMessages(suppressWarnings(library(dplyr,warn.conflicts = F, quietly = T)))
sam_files<-combine_sam_files(sam_list)
library(dplyr)
sam_files<-combine_sam_files(sam_list)
View(report)
a<-report %>%
separate(name, by = " ")
library("dplyr", lib.loc="/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6")
a<-report %>%
separate(name, by = " ")
detach("package:datasets", unload=TRUE)
library("DBI", lib.loc="/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6")
detach("package:DBI", unload=TRUE)
library("datasets", lib.loc="/usr/lib/R/library")
libpath<-"/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6"
#libpath<-snakemake@input[[2]]
.libPaths(c(libpath, .libPaths()))
library(dplyr)
a<-report %>%
separate(name, by = " ")
install.packages("dplyr")
setwd("/user_data/men/sepseq/clinical_studies/init_tests/kraken2_filter/")
libpath<-"/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6"
#libpath<-snakemake@input[[2]]
.libPaths(c(libpath, .libPaths()))
library(dplyr)
#krakendatapath<-snakemake@input[[3]]
krakendatapath<-"data/kraken2_classification/reads_90/reads_90.report"
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
colnames(report)<-c("percentage", "cladeReads", "taxonReads", "n_kmers", "n_unique_kmers",
"taxRank", "taxID", "name")
#read_lengths<-read_tsv(file = input[[4]],
#                        col_names = c("read", "length")) %>%
#separate(read, into = c("read", NA), sep=" ")
a<-report %>%
separate(name, by = " ")
a<-report %>%
dplyr::separate(name, by = " ")
a<-report %>%
select(name)
library(tidyr)
a<-report %>%
separate(name, by = " ")
View(a)
a<-report %>%
separate(name, by = " ", into=c("a","b") )
View(report)
View(report)
View(a)
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
colnames(report)<-c("percentage", "cladeReads", "taxonReads", "n_kmers", "n_unique_kmers",
"taxRank", "taxID", "name")
a<-report %>%
separate(name, by = " ", into=c("a","b") )
a<-report %>%
separate(name, sep = " ", into=c("a","b") )
View(a)
read_sam <- function(file) {
sam_read<-read_tsv(file = file,
col_names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics")) %>%
select(barcode, flag, start_position, mapq, cigar, align_metrics) %>%
filter(flag != 4) %>%
separate(align_metrics, into = c(NA, NA, "align_score", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), sep = ":") %>%
separate(align_score, into = c("align_score", NA)) %>%
mutate(taxid = tools::file_path_sans_ext(file))%>%
# differentiate for adapters and barcodes!
return(sam_read)
}
combine_sam_files<-function(file_list){
combined_sam<-data.frame()
for (i in file_list) {
sam_batch<-read_sam(i)
combined_sam<-combined_sam %>%
bind_rows(
sam_batch
)
}
return(combined_sam)
}
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_files<-combine_sam_files(sam_list)
install.packages("readr")
read_sam <- function(file) {
sam_read<-read.csv(file = file, header = F,
col.names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics")) %>%
select(barcode, flag, start_position, mapq, cigar, align_metrics) %>%
filter(flag != 4) %>%
separate(align_metrics, into = c(NA, NA, "align_score", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), sep = ":") %>%
separate(align_score, into = c("align_score", NA)) %>%
mutate(taxid = tools::file_path_sans_ext(file))%>%
# differentiate for adapters and barcodes!
return(sam_read)
}
combine_sam_files<-function(file_list){
combined_sam<-data.frame()
for (i in file_list) {
sam_batch<-read_sam(i)
combined_sam<-combined_sam %>%
bind_rows(
sam_batch
)
}
return(combined_sam)
}
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_files<-combine_sam_files(sam_list)
libpath<-"/user_data/men/sepseq/R_lib/x86_64-pc-linux-gnu-library/3.6"
#libpath<-snakemake@input[[2]]
.libPaths(c(libpath, .libPaths()))
suppressMessages(suppressWarnings(library(dplyr,warn.conflicts = F, quietly = T)))
#krakendatapath<-snakemake@input[[3]]
krakendatapath<-"data/kraken2_classification/reads_90/reads_90.report"
report<-read.csv2(paste(krakendatapath, sep=""), header = F, comment.char = "#", sep = "\t")
colnames(report)<-c("percentage", "cladeReads", "taxonReads", "n_kmers", "n_unique_kmers",
"taxRank", "taxID", "name")
read_sam <- function(file) {
sam_read<-read.csv(file = file, header = F,
col.names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics")) %>%
select(barcode, flag, start_position, mapq, cigar, align_metrics) %>%
filter(flag != 4) %>%
separate(align_metrics, into = c(NA, NA, "align_score", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), sep = ":") %>%
separate(align_score, into = c("align_score", NA)) %>%
mutate(taxid = tools::file_path_sans_ext(file))%>%
# differentiate for adapters and barcodes!
return(sam_read)
}
combine_sam_files<-function(file_list){
combined_sam<-data.frame()
for (i in file_list) {
sam_batch<-read_sam(i)
combined_sam<-combined_sam %>%
bind_rows(
sam_batch
)
}
return(combined_sam)
}
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_files<-combine_sam_files(sam_list)
sam_list<-paste(sam_folder, list.files(sam_folder, pattern = ".sam"), sep = "")
sam_files<-combine_sam_files(sam_list)
a<-read_sam(sam_list[1])
a<-read_sam(sam_list[2])
a<-read.csv2(file = sam_list[1], header = F, sep = "\t",
col.names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5", "align_metrics"))
a<-read.csv2(file = sam_list[1], header = F, sep = "\t",
col.names = c("barcode", "flag", "read", "start_position", "mapq", "cigar", "drop1", "drop2", "drop3", "drop4", "drop5","drop6", "drop7", "drop8", "align_metrics"))
a<-read.csv2(file = sam_list[1], header = F, sep = "\t")
View(a)
a<-read.csv2(file = sam_list[1], header = F, sep = "\t") %>%
select(V1, V2, V3, V4, V5)
View(a)
a<-read.csv2(file = sam_list[1], header = F, sep = "\t") #%>%
View(a)
colnames(a)<-c("read", "flag", "accession", "start_position", "mapq", "cigar")
View(a)
file_path_sans_ext(sam_list[1])
tools::file_path_sans_ext(sam_list[1])
tools::file_path_sans_ext(basename(sam_list[1]))
read_sam <- function(file) {
sam_read<-read.csv2(file = file, header = F, sep = "\t")%>%
select(V1, V2, V3, V4, V5, V6)
colnames(sam_read)<-c("read", "flag", "accession", "start_position", "mapq", "cigar")
sam_read<-sam_read%>%
filter(flag != 4) %>%
mutate(taxid = tools::file_path_sans_ext(basename(file)))
return(sam_read)
}
combine_sam_files<-function(file_list){
combined_sam<-data.frame()
for (i in file_list) {
sam_batch<-read_sam(i)
combined_sam<-combined_sam %>%
bind_rows(
sam_batch
)
}
return(combined_sam)
}
#sam_folder = input[[5]]
sam_folder<-"data/mapped_reads/reads_90/"
sam_list<-paste(sam_folder, list.files(sam_folder, pattern = ".sam"), sep = "")
sam_files<-combine_sam_files(sam_list)
View(sam_files)
library(tidyr)
install.packages("RSQLite")
library(RSQLite)
dbfile<-"/user_data/men/sepseq/databases/2022_10_18_kraken2_EUPATH_database/databases/NCBI_GTDB_merge.db"
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = dbfile)
## Some operations
dbListTables(db)
## Some operations
dbListTables(db)
## Some operations
genomes2taxid <- dbReadTable(db,"genomes")
View(genomes2taxid)
nodes<-dbReadTable(db,"nodes")
View(nodes)
rank<-dbReadTable(db, "rank")
tree<-dbReadTable(db, "tree")
View(tree)
View(report)
a<-filter(sam_files, taxid == "3038795")
View(a)
View(report)
View(a)
a<-filter(sam_files, taxid == "3019267")
View(a)
